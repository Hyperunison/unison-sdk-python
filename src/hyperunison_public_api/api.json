{
    "openapi": "3.0.0",
    "info": {
        "title": "Unison public API",
        "description": "API for Python and R libraries",
        "version": "1.0.0"
    },
    "paths": {
        "/api/public/cohort/biobank/execute-query": {
            "post": {
                "tags": [
                    "Cohort"
                ],
                "operationId": "publicCohortExecuteQuery",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "Authorization by Api key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "yaml"
                                ],
                                "properties": {
                                    "yaml": {
                                        "type": "string",
                                        "default": null
                                    },
                                    "skipCache": {
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get UCDM result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ResponseToUCDMResultWithSql"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/pipeline/workflow/run/{pipelineVersionId}/": {
            "post": {
                "tags": [
                    "Pipeline"
                ],
                "operationId": "runCustomWorkflow",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "Authorization by Api key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pipelineVersionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "project": {
                                        "description": "Where to place result files",
                                        "type": "string"
                                    },
                                    "cohort": {
                                        "description": "Cohort defined in yaml format",
                                        "type": "string"
                                    },
                                    "biobanks": {
                                        "description": "Codes of biobanks to run workflow",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "parameters": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Just OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiRunPipeline"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/pipeline/{id}": {
            "get": {
                "tags": [
                    "Pipeline"
                ],
                "operationId": "getMultiPipeline",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "Authorization by Api key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get next task for runner agent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MultiRunPipeline"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/structure/save": {
            "post": {
                "tags": [
                    "Structure"
                ],
                "operationId": "bulkUpdateStructure",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "Authorization by Api key",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "yaml"
                                ],
                                "properties": {
                                    "yaml": {
                                        "type": "string",
                                        "default": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Generate suggestion response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataItemDictionaryWithAccuracyListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/structure/{biobankCode}/status": {
            "get": {
                "tags": [
                    "Structure"
                ],
                "operationId": "get_app_publicapi_structure_getbiobankstructuremappingstatus",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "Authorization by Api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "biobankCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status by biobank code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataItemDictionaryWithAccuracyListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/structure/biobanks/{biobankCode}/cdm-export": {
            "post": {
                "tags": [
                    "Structure"
                ],
                "operationId": "exportDatabase",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "Authorization by Api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cdm",
                        "in": "query",
                        "description": "CDM ID. Format: vendor/name:version. By Default: demo/OMOP:5.4 (OMOP 5.4)",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "default": "demo/OMOP:5.4"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Optional. Max count items in the export files, for each file. Use it for debug only",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "cdmTables[]",
                        "in": "query",
                        "description": "Optional. An array of cdm tables to limit export. For example: ['person', 'procedure']",
                        "required": false,
                        "allowEmptyValue": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {},
                            "default": []
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Format of the export. Available values: csv, postgresql, sqlite",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": "csv",
                            "pattern": "^(csv|postgresql|sqlite)$"
                        }
                    },
                    {
                        "name": "connectionString",
                        "in": "query",
                        "description": "For PostgreSQL formats only. Format: dbType://username:password@hostname:port/dbName",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "default": null
                        }
                    },
                    {
                        "name": "runDQD",
                        "in": "query",
                        "description": "Check name to run. Default if none. Possible values: OMOP-5.4",
                        "required": false,
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "default": "",
                            "pattern": "^(OMOP-5.4)?$"
                        }
                    },
                    {
                        "name": "biobankCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\w+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create pipelines to export OMOP database for specific biobanks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BiobankOMOPExportResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/structure/job/{jobId}": {
            "get": {
                "tags": [
                    "Structure"
                ],
                "operationId": "getJob",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "Authorization by Api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jobId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "\\d+"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get job",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Job"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/suggester/generate/{biobankCode}": {
            "get": {
                "tags": [
                    "Suggester"
                ],
                "operationId": "generateSuggests",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "header",
                        "description": "Authorization by Api key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "apiKey",
                        "in": "query",
                        "description": "Authorization by Api key",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "Domain value to generate suggests (by default - all available domains)",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "vocabulary",
                        "in": "query",
                        "description": "Vocabulary value to generate suggests (by default - all available vocabularies)",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "onlyStandardConcept",
                        "in": "query",
                        "description": "Suggest only standard concepts (by default - 1)",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "minAccuracyToRunGPT",
                        "in": "query",
                        "description": "Min accuracy rate to run suggester with ChatGPT (by default - 30)",
                        "required": false,
                        "allowEmptyValue": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "biobankCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generate suggestion response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DataItemDictionaryWithAccuracyListResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ResponseToUCDMResultWithSql": {
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "sql": {
                        "type": "string"
                    },
                    "biobankCode": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "MultiRunPipeline": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "runs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RunPipeline"
                        }
                    },
                    "project": {
                        "type": "string"
                    },
                    "added": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DataItemDictionaryWithAccuracyListResponse": {
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DataItemDictionaryWithAccuracyResponse"
                        }
                    },
                    "count": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "BiobankOMOPExportResponse": {
                "properties": {
                    "biobankId": {
                        "type": "integer"
                    },
                    "jobId": {
                        "type": "integer"
                    },
                    "replyChannelName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Job": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "additionalProperties": true
                    },
                    "state": {
                        "type": "string"
                    },
                    "result": {
                        "type": "object",
                        "additionalProperties": true
                    },
                    "replyChannelName": {
                        "type": "string"
                    },
                    "logs": {
                        "type": "string"
                    },
                    "added": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "RunPipeline": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "channel": {
                        "type": "string"
                    },
                    "shinyFolder": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer"
                    },
                    "pipelineId": {
                        "type": "integer"
                    },
                    "userId": {
                        "type": "integer"
                    },
                    "datasetId": {
                        "type": "integer"
                    },
                    "runnerAgent": {
                        "$ref": "#/components/schemas/RunnerAgent"
                    },
                    "status": {
                        "type": "string"
                    },
                    "output": {
                        "type": "string"
                    },
                    "nextflowCode": {
                        "type": "string"
                    },
                    "result": {
                        "type": "object",
                        "additionalProperties": true
                    },
                    "options": {
                        "type": "object",
                        "additionalProperties": true
                    },
                    "added": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "executionStepsStatus": {
                        "$ref": "#/components/schemas/NextflowPipelineOutputFormatterResult"
                    }
                },
                "type": "object"
            },
            "DataItemDictionaryWithAccuracyResponse": {
                "properties": {
                    "accuracy": {
                        "type": "integer"
                    },
                    "conceptId": {
                        "type": "integer"
                    },
                    "conceptName": {
                        "type": "string"
                    },
                    "conceptCode": {
                        "type": "string"
                    },
                    "vocabulary": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "conceptClass": {
                        "type": "string"
                    },
                    "explanation": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RunnerAgent": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "lastActiveTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "NextflowPipelineOutputFormatterResult": {
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    },
                    "itemsStatus": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NextflowPipelineOutputFormatterResultItemStatus"
                        }
                    }
                },
                "type": "object"
            },
            "NextflowPipelineOutputFormatterResultItemStatus": {
                "properties": {
                    "brickName": {
                        "type": "string"
                    },
                    "jobsTotal": {
                        "type": "integer"
                    },
                    "jobsDone": {
                        "type": "integer"
                    },
                    "finished": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Cohort",
            "description": "Cohort"
        },
        {
            "name": "Pipeline",
            "description": "Pipeline"
        },
        {
            "name": "Structure",
            "description": "Structure"
        },
        {
            "name": "Suggester",
            "description": "Suggester"
        }
    ]
}